(window.webpackJsonp=window.webpackJsonp||[]).push([[213],{432:function(t,e,a){"use strict";a.r(e);var s=a(0),n=Object(s.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"use-adb-to-collect-gui-logs-of-the-atomicdex-android-app"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-adb-to-collect-gui-logs-of-the-atomicdex-android-app","aria-hidden":"true"}},[t._v("#")]),t._v(" Use adb to collect GUI logs of the AtomicDEX android app")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.android.com/studio/command-line/adb",target:"_blank",rel:"noopener noreferrer"}},[t._v("adb"),a("OutboundLink")],1),t._v(" is a debug tool that can be used to collect logs and track down bugs in android apps running on a mobile device.")]),t._v(" "),a("p",[t._v("The following walkthrough describes the process to collect logs using adb.")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("Some parts of this article are taken from the following stackexchange answer: https://android.stackexchange.com/a/144967")])]),t._v(" "),a("h2",{attrs:{id:"preparing-the-android-device"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#preparing-the-android-device","aria-hidden":"true"}},[t._v("#")]),t._v(" Preparing the android device")]),t._v(" "),a("p",[t._v("To enable USB debugging on the android device, go to "),a("code",[t._v("Settings -› Development")]),t._v(". If you don't have that entry in your settings menu, go to "),a("code",[t._v("Settings -› About")]),t._v(", scroll to the "),a("code",[t._v("Build number")]),t._v(", and tap it until your device congratulates you having become a developer.")]),t._v(" "),a("p",[t._v('Go back to the main page of the Settings menu, and close to the bottom you should see the "Development" (or "Developers") settings now. Enter it, and enable USB Debugging here.')]),t._v(" "),a("p",[t._v("Once the android device is ready, you have to connect it to your Computer to collect logs. Follow the instructions for your specific OS from the following sections.")]),t._v(" "),a("h2",{attrs:{id:"linux-macos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux-macos","aria-hidden":"true"}},[t._v("#")]),t._v(" Linux/MacOS")]),t._v(" "),a("h3",{attrs:{id:"install-and-start-adb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-and-start-adb","aria-hidden":"true"}},[t._v("#")]),t._v(" Install and start adb")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" update\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" android-tools-adb\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" adb start-server\n")])])]),a("h3",{attrs:{id:"connecting-the-android-device"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#connecting-the-android-device","aria-hidden":"true"}},[t._v("#")]),t._v(" Connecting the android device")]),t._v(" "),a("p",[t._v("Enable USB debugging on the android device and connect it to your Personal Computer using a USB cable.")]),t._v(" "),a("p",[t._v("To verify that the devise is being detected, run:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("adb devices\n")])])]),a("p",[t._v("The first time the command is executed, there will be a connection confirmation dialog on your android device. Allow the connection. Now, the command "),a("code",[t._v("adb devices")]),t._v(" should display your device")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("List of devices attached\n8394c6a8\tdevice\n")])])]),a("p",[t._v("If the device is not being detected, follow the instructions in this "),a("a",{attrs:{href:"https://android.stackexchange.com/a/144967",target:"_blank",rel:"noopener noreferrer"}},[t._v("stackexchange answer"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"collecting-logs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#collecting-logs","aria-hidden":"true"}},[t._v("#")]),t._v(" Collecting logs")]),t._v(" "),a("p",[t._v("Once the device is detected, open the AtomicDEX app on your device and execute the following command on your PC")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("adb logcat --pid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("adb shell pidof -s com.komodoplatform.atomicdex"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n")])])]),a("p",[t._v("You should see output similar to")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("09-04 19:21:18.524  1784  1784 V KeyguardStatusView: refresh statusview showing:true\n09-04 19:21:18.537  1784  1784 V KeyguardDisplayManager: show\n09-04 19:21:20.953   882 23243 I chatty  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" uid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1000 system_server expire 2 lines\n09-04 19:21:22.992   882  1068 I chatty  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" uid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("system"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ActivityManager expire 1 line\n09-04 19:21:33.339   882  2495 I chatty  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" uid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("system"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Binder:882_8 expire 1 line\n09-04 19:21:39.815   882  1416 I chatty  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" uid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("system"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" InputReader expire 5 lines\n09-04 19:21:39.917  1174  1295 D QMI_FW  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" chen-screen on: is_screen_off "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 0\n09-04 19:21:39.920  1195  1540 D QMI_FW  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" chen-screen on: is_screen_off "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 0\n09-04 19:21:39.925   882   882 I chatty  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" uid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1000 system_server expire 9 lines\n09-04 19:21:40.034   882  1453 I chatty  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" uid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("system"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ColorBalanceThr expire 5 lines\n09-04 19:21:40.211   882  1169 I chatty  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" uid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("system"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" PowerManagerSer expire 21 lines\n09-04 19:21:40.219  3112  3112 V DreamService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DozeService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": wakeUp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": fromSystem"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true, mWaking"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false, mFinished"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n09-04 19:21:40.219  3112  3112 V DreamService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DozeService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": finish"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": mFinished"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n09-04 19:21:40.226  3112  3112 V DreamService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DozeService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": detach"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": Calling onDreamingStopped"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n09-04 19:21:40.226  3112  3112 V DreamService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DozeService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": onDreamingStopped"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n09-04 19:21:40.233  3112  3112 V DreamService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DozeService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": onDestroy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n09-04 19:21:40.239   882  6736 I chatty  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" uid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("system"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Binder:882_15 expire 2 lines\n09-04 19:21:42.963   882  1114 I chatty  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" uid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("system"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" batterystats-wo expire 10 lines\n09-04 19:21:46.119  1174  1295 D QMI_FW  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" chen-screen off: is_screen_off "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 1\n09-04 19:21:46.119  1195  1540 D QMI_FW  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" chen-screen off: is_screen_off "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 1\n09-04 19:21:46.302   882  1169 I chatty  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" uid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("system"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" PowerManagerSer expire 44 lines\n09-04 19:21:46.302   882  1164 I chatty  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" uid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("system"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" android.fg expire 7 lines\n09-04 19:21:46.307  3112  3112 V DreamService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DozeService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": onCreate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n09-04 19:21:46.310  3112  3112 W DreamService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DozeService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": Updating doze without a window token.\n09-04 19:21:46.313  3112  3112 V DreamService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DozeService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": onBind"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" intent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Intent "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" act"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("android.service.dreams.DreamService flg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("0x800000 cmp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("com.oneplus.aod/com.oneplus.doze.DozeService "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n09-04 19:21:46.314  3112  3112 V DreamService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DozeService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": Calling onDreamingStarted"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n09-04 19:21:46.314  3112  3112 V DreamService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DozeService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": onDreamingStarted"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n09-04 19:21:46.342   882  2495 I chatty  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" uid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("system"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Binder:882_8 expire 5 lines\n09-04 19:21:46.354   882   882 I chatty  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" uid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1000 system_server expire 49 lines\n09-04 19:21:46.394   882  1416 I chatty  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" uid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("system"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" InputReader expire 2 lines\n09-04 19:21:46.395   882  1453 I chatty  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" uid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("system"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ColorBalanceThr expire 18 lines\n")])])]),a("p",[t._v("Once you have confirmed the output on your terminal looks similar, hit "),a("code",[t._v("CTRL + C")]),t._v(" on your keyboard to interrupt the log on your terminal.")]),t._v(" "),a("p",[t._v("To collect logs of the app to a text file when the bug/problem case is executed, run the following command:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("adb logcat --pid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("adb shell pidof -s com.komodoplatform.atomicdex"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ~/Desktop/atomicDEX-log.txt\n")])])]),a("p",[t._v("There won't be any visible output on the terminal except for a blinking cursor.")]),t._v(" "),a("p",[t._v("Now use the app on the android device till the problem case occurs. Then hit "),a("code",[t._v("CTRL + C")]),t._v(" on your keyboard to exit from the command. You will find a text file named "),a("code",[t._v("atomicDEX-log.txt")]),t._v(" on your desktop. Share it with the developer to report the issue.")]),t._v(" "),a("h2",{attrs:{id:"windows"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#windows","aria-hidden":"true"}},[t._v("#")]),t._v(" Windows")]),t._v(" "),a("p",[t._v("Excerpts from the article "),a("code",[t._v("https://www.xda-developers.com/install-adb-windows-macos-linux/")]),t._v(" are used in the following section")]),t._v(" "),a("ul",[a("li",[t._v("Download the "),a("a",{attrs:{href:"https://dl.google.com/android/repository/platform-tools-latest-windows.zip",target:"_blank",rel:"noopener noreferrer"}},[t._v("ADB ZIP file for Windows"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("Extract the contents of this ZIP file into an easily accessible folder")]),t._v(" "),a("li",[t._v("Open Windows explorer and browse to where you extracted the contents of this ZIP file")]),t._v(" "),a("li",[t._v("Then open up a Command Prompt from the same directory as this ADB binary. This can be done by holding Shift and Right-clicking within the folder then click the “open command prompt here” option. (Some Windows 10 users may see “PowerShell” instead of “command prompt”.)")])]),t._v(" "),a("div",{staticStyle:{clear:"both","margin-top":"1rem","margin-bottom":"1rem",display:"block"}},[a("img",{attrs:{src:"/power-shell.png"}})]),t._v(" "),a("ul",[a("li",[t._v("Connect your smartphone or tablet to your computer with a USB cable. Change the USB mode to “file transfer (MTP)” mode. Some OEMs may or may not require this, but it’s best to just leave it in this mode for general compatibility.")]),t._v(" "),a("li",[t._v("In the Command Prompt window, enter the following command to launch the ADB daemon: "),a("code",[t._v(".\\adb.exe devices")])]),t._v(" "),a("li",[t._v("On your phone’s screen, you should see a prompt to allow or deny USB Debugging access. Naturally, you will want to grant USB Debugging access when prompted (and tap the always allow check box if you never want to see that prompt again).")])]),t._v(" "),a("div",{staticStyle:{clear:"both","margin-top":"1rem","margin-bottom":"1rem",display:"block"}},[a("img",{attrs:{src:"/allow-usb-debugging.png"}})]),t._v(" "),a("ul",[a("li",[t._v("Finally, re-enter the command "),a("code",[t._v(".\\adb.exe devices")]),t._v(". If everything was successful, you should now see your device’s serial number in the command prompt.")]),t._v(" "),a("li",[t._v("If your device isn't being detected, follow the instructions in "),a("a",{attrs:{href:"https://developer.android.com/studio/run/oem-usb#Win10",target:"_blank",rel:"noopener noreferrer"}},[t._v("this article"),a("OutboundLink")],1),t._v(" to install the USB driver corresponding to your device. The drivers for your device can be found in "),a("a",{attrs:{href:"https://developer.android.com/studio/run/oem-usb#Drivers",target:"_blank",rel:"noopener noreferrer"}},[t._v("this table"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("Now, open the AtomicDEX app on your mobile and run the following command in your Command Prompt:")])]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\\adb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exe logcat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("pid=$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\\adb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exe shell pidof "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("komodoplatform"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("atomicdex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("Sample output:")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("09-09 21:44:10.834 10446 10446 W 1.gpu   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1400 audit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0.0:9728111"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": avc: denied "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"u:object_r:vendor_default_prop:s0"')]),t._v(" dev"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tmpfs"')]),t._v(" ino"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("22632 scontext"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("u:r:untrusted_app:s0:c52,c257,c512,c768 tcontext"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("u:object_r:vendor_default_prop:s0 tclass"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("file permissive"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("0\n09-09 21:44:10.845 10446 10465 E libc    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" Access denied finding property "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vendor.debug.egl.swapinterval"')]),t._v("\n09-09 21:44:11.370 10446 10465 I chatty  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" uid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("10308"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("com.komodoplatform.atomicdex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 1.gpu identical 31 lines\n09-09 21:44:11.385 10446 10465 E libc    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" Access denied finding property "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vendor.debug.egl.swapinterval"')]),t._v("\n09-09 21:44:11.387 10446 10464 I flutter "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" ALL COINS ACTIVATES\n09-09 21:44:11.389 10446 10464 I flutter "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" ConnectionState.active\n09-09 21:44:11.420 10446 10465 E libc    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" Access denied finding property "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vendor.debug.egl.swapinterval"')]),t._v("\n09-09 21:44:11.431 10446 10465 I chatty  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" uid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("10308"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("com.komodoplatform.atomicdex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 1.gpu identical 1 line\n09-09 21:44:11.441 10446 10465 E libc    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" Access denied finding property "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vendor.debug.egl.swapinterval"')]),t._v("\n09-09 21:44:11.833 10446 10464 I flutter "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" getBalance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"address"')]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1NHF2GX8Fb9skXQdMGgRoGk9mH6tzSfqpV"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"balance"')]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"coin"')]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BTC"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"locked_by_swaps"')]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n09-09 21:44:11.836 10446 10464 I flutter "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" getBalance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"address"')]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"RWZS6nQQrQxSpXmppSfYto5MXYZVdM4wZr"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"balance"')]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"coin"')]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"KMD"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"locked_by_swaps"')]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n09-09 21:44:12.339 10446 10464 I flutter "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" LOADCOIN FINISHED\n")])])]),a("ul",[a("li",[t._v("If the output in your command prompt is similar, it means the setup is working correctly. Hit "),a("code",[t._v("CTRL + C")]),t._v(" to interrupt the log.")]),t._v(" "),a("li",[t._v("Create a folder named "),a("code",[t._v("logs")]),t._v(" in the extracted folder. Run: "),a("code",[t._v("mkdir logs")])]),t._v(" "),a("li",[t._v("To collect logs of the app to a text file when the bug/problem case is executed, run the following command")])]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\\adb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exe logcat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("pid=$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\\adb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exe shell pidof "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("komodoplatform"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("atomicdex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" >  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\\logs\\atomicDEX"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt\n")])])]),a("ul",[a("li",[t._v("There won't be any visible output on the command prompt except for a blinking cursor.")]),t._v(" "),a("li",[t._v("Now use the app on the android device till the problem case occurs. Then hit "),a("code",[t._v("CTRL + C")]),t._v(" on your keyboard to exit from the command. You will find a text file named "),a("code",[t._v("atomicDEX-log.txt")]),t._v(" in the folder named "),a("code",[t._v("logs")]),t._v(" in the extracted folder. Share it with the developer to report the issue.")])])])},[],!1,null,null,null);e.default=n.exports}}]);