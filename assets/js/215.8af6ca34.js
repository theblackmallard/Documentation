(window.webpackJsonp=window.webpackJsonp||[]).push([[215],{433:function(s,a,t){"use strict";t.r(a);var e=t(0),n=Object(e.a)({},function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"test-komodo-source-from-jl777-branch-to-make-sure-all-the-assetchains-sync-from-scratch-properly"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#test-komodo-source-from-jl777-branch-to-make-sure-all-the-assetchains-sync-from-scratch-properly","aria-hidden":"true"}},[s._v("#")]),s._v(" Test komodo source from jl777 branch to make sure all the assetchains sync from scratch properly")]),s._v(" "),t("h2",{attrs:{id:"purpose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#purpose","aria-hidden":"true"}},[s._v("#")]),s._v(" Purpose")]),s._v(" "),t("p",[s._v("The purpose of this test is to check if the komodo source from jl777 branch has no issues compiling, all assetchains starts and syncs fully from scratch, no stuck chains. You can use this guide for any branch you want to test, just change the branch name in clone and compile section.")]),s._v(" "),t("div",{staticClass:"tip custom-block"},[t("p",{staticClass:"custom-block-title"},[s._v("Note")]),s._v(" "),t("p",[s._v("This doc is similar to compiling komodo with an additional "),t("code",[s._v("verify")]),s._v(" script. Please make sure you are not testing this in a node with funds. This doc is intended for test nodes/computer. If you have funds in your assetchains please backup your wallet and private key. The information in this doc may change in the future to update.")])]),s._v(" "),t("h2",{attrs:{id:"steps"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#steps","aria-hidden":"true"}},[s._v("#")]),s._v(" Steps")]),s._v(" "),t("ol",[t("li",[s._v("Install Dependencies (most needed for the first time)")]),s._v(" "),t("li",[s._v("Clone komodo repo and compile")]),s._v(" "),t("li",[s._v("Create komodo.conf file and clear all assetchaiins dir from .komodo data dir")]),s._v(" "),t("li",[s._v("Start AC using ./assetchains.old and let them sync (it may take a while)")]),s._v(" "),t("li",[s._v("Verify the assetchains")])]),s._v(" "),t("h2",{attrs:{id:"details"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#details","aria-hidden":"true"}},[s._v("#")]),s._v(" Details")]),s._v(" "),t("h3",{attrs:{id:"_1-install-dependencies"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-install-dependencies","aria-hidden":"true"}},[s._v("#")]),s._v(" 1. Install dependencies")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" upgrade -y\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" build-essential pkg-config libc6-dev m4 g++-multilib autoconf libtool ncurses-dev "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("unzip")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" python zlib1g-dev "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" bsdmainutils automake libboost-all-dev libssl-dev libprotobuf-dev protobuf-compiler libgtest-dev libqt4-dev libqrencode-dev libdb++-dev ntp ntpdate software-properties-common "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" libcurl4-gnutls-dev cmake clang libsodium-dev -y\n")])])]),t("h3",{attrs:{id:"_2-clone-compile-symlink"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-clone-compile-symlink","aria-hidden":"true"}},[s._v("#")]),s._v(" 2. Clone, Compile & Symlink")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cd")]),s._v(" ~\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/jl777/komodo\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cd")]),s._v(" komodo\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout jl777\n./zcutil/fetch-params.sh\n./zcutil/build.sh -j"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("nproc"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -sf /home/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$USER")]),s._v("/komodo/src/komodo-cli /usr/local/bin/komodo-cli\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -sf /home/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$USER")]),s._v("/komodo/src/komodod /usr/local/bin/komodod\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x /usr/local/bin/komodo-cli\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x /usr/local/bin/komodod\n")])])]),t("h3",{attrs:{id:"_3-create-komodo-conf-clear-existing-assetchains-database-and-files"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-create-komodo-conf-clear-existing-assetchains-database-and-files","aria-hidden":"true"}},[s._v("#")]),s._v(" 3. Create "),t("code",[s._v("komodo.conf")]),s._v(" & clear existing assetchains database and files")]),s._v(" "),t("p",[s._v("Create "),t("code",[s._v("komodo.conf")])]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cd")]),s._v(" ~/.komodo\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" komodo.conf\n")])])]),t("p",[s._v("Paste the following content inside the file and save it. Don't forget to change values for "),t("code",[s._v("rpcuser")]),s._v(" & "),t("code",[s._v("rpcpassword")]),s._v(".")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("rpcuser"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("username\nrpcpassword"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("password\ntxindex"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("1\nbind"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("127.0.0.1\nrpcbind"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("127.0.0.1\n")])])]),t("p",[s._v("Remove existing assetchain block database and files")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cd")]),s._v(" ~/.komodo\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf AXO  BEER  BET  BNTN  BOTS  BTCH  CEAL  CHAIN  COQUI  CRYPTO  DEX  DSEC  ETOMIC  HODL  JUMBLR  KV  MESH  MGW  MNZ  MSHARK  NINJA  OOT  PANGEA  PIZZA  PRLPAY  REVS  SUPERNET  WLC\n")])])]),t("h3",{attrs:{id:"_4-start-all-assetchains"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-start-all-assetchains","aria-hidden":"true"}},[s._v("#")]),s._v(" 4. Start all assetchains")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cd")]),s._v(" ~/komodo/src\n./assetchains.old\n")])])]),t("p",[s._v("Wait for all sync to finish before proceeding to next step. This may take a while depending your hardware and internet connection")]),s._v(" "),t("h3",{attrs:{id:"_5a-create-verify-script-and-get-coinlist-file"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5a-create-verify-script-and-get-coinlist-file","aria-hidden":"true"}},[s._v("#")]),s._v(" 5a. Create verify script and get coinlist file")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cd")]),s._v(" ~\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" -qO coinlist https://raw.githubusercontent.com/KomodoPlatform/komodotools/master/webworker01/coinlist\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" verify\n")])])]),t("p",[s._v("Paste the following content into it and save the file")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("source")]),s._v(" coinlist\nforked"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" coins "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${coinlist[@]}")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    coin"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$coins")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    blocks"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("komodo-cli -ac_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("$"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("coin"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" getinfo "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq .blocks"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n    longest"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("komodo-cli -ac_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("$"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("coin"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" getinfo "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq .longestchain"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("blocks "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" longest"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        forked"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\033[0;31m'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${coin[0]}")]),s._v(" - Possible fork!\\033[0m Blocks "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$blocks")]),s._v(" < LongestChain "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$longest")]),s._v('\\n"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${coin[0]}")]),s._v(" - Blocks "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$blocks")]),s._v(" = LongestChain "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$longest")]),s._v('"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$forked")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\033[0;32mAll coins are fine\\033[0m\\n"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),t("p",[s._v("change permission of "),t("code",[s._v("verify")]),s._v(" script")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x verify\n")])])]),t("h3",{attrs:{id:"_5b-verify-the-block-height"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5b-verify-the-block-height","aria-hidden":"true"}},[s._v("#")]),s._v(" 5b. Verify the block height")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("./verify\n")])])]),t("p",[s._v("Result: The result will be similar to below. At the end of the output you will see All coins are fine.")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("KMD - Blocks 842790 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 842790\nCHIPS - Blocks 1987211 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Headers 1987211\nREVS - Blocks 162517 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 162517\nSUPERNET - Blocks 221024 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 221024\nDEX - Blocks 179547 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 179547\nPANGEA - Blocks 18770 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 18770\nJUMBLR - Blocks 153932 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 153932\nBET - Blocks 47470 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 47470\nCRYPTO - Blocks 31645 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 31645\nHODL - Blocks 65524 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 65524\nMSHARK - Blocks 152851 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 152851\nBOTS - Blocks 141093 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 141093\nMGW - Blocks 21237 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 21237\nCOQUI - Blocks 86948 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 86948\nWLC - Blocks 224671 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 224671\nKV - Blocks 59329 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 59329\nCEAL - Blocks 31095 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 31095\nMESH - Blocks 20467 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 20467\nMNZ - Blocks 87188 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 87188\nAXO - Blocks 8731 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 8731\nETOMIC - Blocks 17931 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 17931\nBTCH - Blocks 49431 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 49431\nPIZZA - Blocks 31850 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 31850\nBEER - Blocks 37853 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 37853\nNINJA - Blocks 8102 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 8102\nOOT - Blocks 41106 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 41106\nBNTN - Blocks 39911 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 39911\nCHAIN - Blocks 2722 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 2722\nPRLPAY - Blocks 1335 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 1335\nDSEC - Blocks 230 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" LongestChain 230\nAll coins are fine\n")])])])])},[],!1,null,null,null);a.default=n.exports}}]);